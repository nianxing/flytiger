name: Deploy to Azure

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install azure-cli==2.34.1
    
    - name: Clean up any previous deployments
      run: |
        # Wait a moment before attempting cleanup
        sleep 10
        echo "Attempting to login to Azure..."
        az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }} || echo "Login failed, but continuing"
        echo "Attempting to stop web app..."
        az webapp stop --name flytiger-app --resource-group flytiger-rg || echo "Could not stop app, but continuing"
        echo "Waiting for the app to stop..."
        sleep 20
        echo "Continuing with deployment..."
    
    - name: Create deployment package
      run: |
        mkdir -p deploy_package
        
        # Copy essential files
        cp -r app deploy_package/
        cp -r static deploy_package/ || echo "No static directory"
        cp -r templates deploy_package/ || echo "No templates directory"
        
        # Copy Python files
        cp config.py deploy_package/
        cp run.py deploy_package/
        cp app.py deploy_package/
        cp application.py deploy_package/
        cp app_start.py deploy_package/
        cp wsgi.py deploy_package/
        
        # Copy configuration files
        cp requirements.txt deploy_package/
        cp gunicorn.conf.py deploy_package/
        
        # Create startup.py for Azure to detect
        echo "Creating startup.py for Azure..."
        echo 'import os' > deploy_package/startup.py
        echo 'from app import app  # Import the app from app.py' >> deploy_package/startup.py
        echo '' >> deploy_package/startup.py
        echo 'if __name__ == "__main__":' >> deploy_package/startup.py
        echo '    port = int(os.environ.get("PORT", 8000))' >> deploy_package/startup.py
        echo '    app.run(host="0.0.0.0", port=port)' >> deploy_package/startup.py
        
        # Copy deployment files
        cp custom_startup.sh deploy_package/
        chmod +x deploy_package/custom_startup.sh
        
        # Create empty web.config to indicate Python app
        echo '<?xml version="1.0"?><configuration></configuration>' > deploy_package/web.config
    
    # 使用发布配置文件部署Web应用
    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'flytiger-app'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ./deploy_package
        
    - name: Start web app after deployment
      run: |
        echo "Attempting to start web app..."
        az webapp start --name flytiger-app --resource-group flytiger-rg || echo "Could not start app via CLI, it should start automatically"
        
    - name: Configure App Service to run startup script
      run: |
        echo "Setting explicit startup command..."
        # Set a standard gunicorn command that Azure expects for Python apps
        az webapp config set --name flytiger-app --resource-group flytiger-rg --startup-command "gunicorn --bind=0.0.0.0:8000 app_start:app" || echo "Could not set startup command"
        
        # Ensure we're using Python 3.9
        echo "Setting Azure to use Python 3.9..."
        az webapp config set --name flytiger-app --resource-group flytiger-rg --linux-fx-version "PYTHON|3.9" || echo "Could not set Python version"
        
        # Set standard environment variables for Python apps
        echo "Setting environment variables..."
        az webapp config appsettings set --name flytiger-app --resource-group flytiger-rg --settings \
          FLASK_APP=app_start.py \
          FLASK_ENV=production \
          SCM_DO_BUILD_DURING_DEPLOYMENT=true \
          PORT=8000 \
          PYTHONPATH="/home/site/wwwroot" || echo "Could not set app settings"
          
        # Restart the web app to apply changes
        echo "Restarting web app..."
        az webapp restart --name flytiger-app --resource-group flytiger-rg || echo "Could not restart app"